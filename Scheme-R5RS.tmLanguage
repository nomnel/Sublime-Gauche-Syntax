<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>scm</string>
		<string>sch</string>
		<string>ss</string>
	</array>
	<key>name</key>
	<string>Scheme-R5RS</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>comment</key>
			<string>comment</string>
			<key>match</key>
			<string>;.*$\n?</string>
			<key>name</key>
			<string>comment.line.semicolon.scheme</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.language.scheme</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>#f, #t</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s|\)))((\s*(?i:#f|#t))*)(\(|\s|\))</string>
			<key>name</key>
			<string>meta.language.scheme</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.scheme</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>number</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s|\)))((\s*(\d+|#(?i:e|i|b|o|d|x)\d+))*)(\(|\s|\))</string>
			<key>name</key>
			<string>meta.numeric.scheme</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>comment</key>
			<string>string</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.scheme</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\.</string>
					<key>name</key>
					<string>constant.character.escape.scheme</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.scheme</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.scheme</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>(define name</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))((?i:define-syntax|define))\s([\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+)(\s|\()</string>
			<key>name</key>
			<string>meta.function.scheme</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.scheme</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.scheme</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.scheme</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>(define (name arg1 ...)</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))((?i:define))\s*\(([\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+)((\s+[\w!$%&amp;*+-./:&lt;=&gt;?@^_~]*)*)</string>
			<key>name</key>
			<string>meta.function.scheme</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.scheme</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.scheme</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>lambda args</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))((?i:lambda))\s*\((([\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+\s*)*)</string>
			<key>name</key>
			<string>meta.function.scheme</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.scheme</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.scheme</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>named let (let name ((var1 foo) ...)</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))((?i:let))\s+([\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+)</string>
			<key>name</key>
			<string>meta.function.scheme</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.scheme</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;=(\(|\s))((?i:define-syntax|let-syntax|letrec-syntax|syntax-rules))(\s|\()</string>
			<key>name</key>
			<string>meta.function.scheme</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.scheme</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;=(\(|\s))((?i:define|lambda|letrec|let\*|let|do))(\s|\()</string>
			<key>name</key>
			<string>meta.function.scheme</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.scheme</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;=(\(|\s))((?i:if|cond|else|case|and|or|begin))(\s|\()</string>
			<key>name</key>
			<string>meta.control.scheme</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.scheme</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;=(\(|\s))((?i:force|delay|call-with-current-continuation|call/cc|values|call-with-values|dynamic-wind|eval|call-with-input-file|call-with-output-file|map|for-each))(\s|\()</string>
			<key>name</key>
			<string>meta.operator.scheme</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.scheme</string>
	<key>uuid</key>
	<string>bc4ca44c-700b-477d-a8bb-7652a5bbb32f</string>
</dict>
</plist>
