<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>scm</string>
	</array>
	<key>name</key>
	<string>Gauche</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>comment</key>
			<string>comment</string>
			<key>match</key>
			<string>;.*$\n?</string>
			<key>name</key>
			<string>comment.line.semicolon.gauche</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\#\|</string>
			<key>comment</key>
			<string>block comment</string>
			<key>end</key>
			<string>\|\#</string>
			<key>name</key>
			<string>comment.block.gauche</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>comment.character.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>reader syntax</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s|\)))(\#\,)\(</string>
			<key>name</key>
			<string>meta.character.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.language.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>#f, #t</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s|\)))((\s*(#(f|t)))*)(\(|\s|\))</string>
			<key>name</key>
			<string>meta.language.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>number</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s|\)))((\s*(\d+|#(e|i|b|o|d|x)\d+))*)(\(|\s|\))</string>
			<key>name</key>
			<string>meta.numeric.gauche</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>comment</key>
			<string>string</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.gauche</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.gauche</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>gloval variable</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s|\)))((\s*(\*[\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+\*))*)(\(|\s|\))</string>
			<key>name</key>
			<string>meta.variable.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>key (knowingly, it should be constant.language.gauche)</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s|\)))(:[\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+)(\(|\s|\))</string>
			<key>name</key>
			<string>meta.variable.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>signal exception</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(raise|error(|f))(\s|\()</string>
			<key>name</key>
			<string>meta.illegal.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.gauche</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>define with (name)</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(define(|-constant|-in-module))\s*\(\s*([\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+)(\s|\(|\))</string>
			<key>name</key>
			<string>meta.function.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.gauche</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.gauche</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>define with name, super</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(define-condition-type)\s([\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+)\s([\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+)(\s|\()</string>
			<key>name</key>
			<string>meta.function.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.gauche</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.gauche</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>define with (name, super)</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(define-record-type)\s*\(\s*([\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+)\s([\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+)(\s|\(|\))</string>
			<key>name</key>
			<string>meta.function.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.gauche</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>define|define-* with name</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(define(|-[\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+))\s([\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+)(\s|\()</string>
			<key>name</key>
			<string>meta.function.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.gauche</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>named let</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(let)\s+([\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+)</string>
			<key>name</key>
			<string>meta.function.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.gauche</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>keyword with name</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(use|select-module)\s([\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+)(\s|\(|\))</string>
			<key>name</key>
			<string>meta.operator.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>define syntax</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))((define|let(|rec))-syntax|syntax-rules)(\s|\()</string>
			<key>name</key>
			<string>meta.function.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>define|define-*</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(define(|-[\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+))(\s|\()</string>
			<key>name</key>
			<string>meta.function.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>lambda</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(lambda|\^(|[_a-z])|\$|cut(|e)|case-lambda)(\s|\()</string>
			<key>name</key>
			<string>meta.function.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>binding</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(let(|\*(|-values)|rec|1|/cc)|let-(args|values|optionals\*|keywords(|\*))|and-let\*|(fluid|rxmatch)-let|(if-|r)let1|rec|receive|parameterize|get-optional)(\s|\()</string>
			<key>name</key>
			<string>meta.function.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>iterator</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(do(|list|times)|while|until)(\s|\()</string>
			<key>name</key>
			<string>meta.function.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>match lambda</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(match-(define|lambda(|\*)|let(|\*|1|rec)))(\s|\()</string>
			<key>name</key>
			<string>meta.function.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>control</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(if|cond(|-expand|-list)|else|case|and|or|when|unless|begin(|0)|dynamic-wind|guard|unwind-protect|match|rxmatch-(case|cond|if))(\s|\()</string>
			<key>name</key>
			<string>meta.control.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>misc keywords</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(shift|reset|force|delay|lazy|eager|values|eval|apply|filter|(|hash-table-)(map|for-each)|export(|-all)|import|use|extend|select-module)(\s|\()</string>
			<key>name</key>
			<string>meta.operator.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>call-with-*</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(call/[cp]c|call-with-[\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+)(\s|\()</string>
			<key>name</key>
			<string>meta.operator.gauche</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.gauche</string>
	<key>uuid</key>
	<string>b5925227-2a05-405b-8793-3fd13033a25e</string>
</dict>
</plist>
