<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>scm</string>
	</array>
	<key>name</key>
	<string>Gauche</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>comment</key>
			<string>comment</string>
			<key>match</key>
			<string>;.*$\n?</string>
			<key>name</key>
			<string>comment.line.semicolon.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.language.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>#f, #t</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s|\)))((\s*(#f|#t))*)(\(|\s|\))</string>
			<key>name</key>
			<string>meta.language.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>number()</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s|\)))((\s*(\d+|#(e|i|b|o|d|x)\d+))*)(\(|\s|\))</string>
			<key>name</key>
			<string>meta.numeric.gauche</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>comment</key>
			<string>string</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.gauche</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\.</string>
					<key>name</key>
					<string>constant.character.escape.gauche</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.gauche</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>(define name</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(define-syntax|define)\s([\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+)(\s|\()</string>
			<key>name</key>
			<string>meta.function.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.gauche</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.gauche</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>(define (name arg1 ...)</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(define)\s*\(([\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+)((\s+[\w!$%&amp;*+-./:&lt;=&gt;?@^_~]*)*)</string>
			<key>name</key>
			<string>meta.function.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.gauche</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>lambda args</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(lambda)\s*\((([\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+\s*)*)</string>
			<key>name</key>
			<string>meta.function.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.gauche</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.gauche</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>named let (let name ((var1 foo) ...)</string>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(let)\s+([\w!$%&amp;*+-./:&lt;=&gt;?@^_~]+)</string>
			<key>name</key>
			<string>meta.function.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.gauche</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(define-syntax|let-syntax|letrec-syntax|syntax-rules)(\s|\()</string>
			<key>name</key>
			<string>meta.function.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.gauche</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(define|lambda|letrec|let\*|let|do)(\s|\()</string>
			<key>name</key>
			<string>meta.function.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.gauche</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(if|cond|else|case|and|or|begin)(\s|\()</string>
			<key>name</key>
			<string>meta.control.gauche</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.gauche</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;=(\(|\s))(force|delay|call-with-current-continuation|call/cc|values|call-with-values|dynamic-wind|eval|call-with-input-file|call-with-output-file|map|for-each)(\s|\()</string>
			<key>name</key>
			<string>meta.operator.gauche</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.gauche</string>
	<key>uuid</key>
	<string>b5925227-2a05-405b-8793-3fd13033a25e</string>
</dict>
</plist>
